# Start from golang base image
FROM golang:1.16-alpine as builder

# Install git.
# Git is required for fetching the dependencies.
RUN apk update && apk add --no-cache git

# Set the current working directory inside the container 
WORKDIR /app

# Copy go mod and sum files 
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and the go.sum files are not changed 
RUN go mod download 

# Copy the source from the current directory to the working Directory inside the container 
COPY . .

# Build the Go app
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main ./cmd/app/main.go

# Start a new stage from scratch
# FROM alpine:latest
FROM alpine:3.6
RUN apk --no-cache add ca-certificates
RUN apk --no-cache add tzdata
RUN apk add --no-cache libc6-compat

WORKDIR /root/

# Copy the Pre-built binary file from the previous stage. Observe we also copied the .env file
COPY --from=builder /app/main .

# inject DSN w ARG 
ARG DSN

# Setup build time env
ENV DSN=$DSN
ENV APP_ENV=local
ENV HOST 0.0.0.0
ENV PORT 5000
EXPOSE 5000

#Command to run the executable
CMD ["./main"]